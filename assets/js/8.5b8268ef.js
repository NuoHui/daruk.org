(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{726:function(r,e,t){"use strict";t.r(e);var v=t(103),_=Object(v.a)({},(function(){var r=this,e=r.$createElement,t=r._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[r._v("#")]),r._v(" 介绍")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://darukjs.com",target:"_blank",rel:"noopener noreferrer"}},[r._v("Daruk"),t("OutboundLink")],1),r._v(" 是一款基于 Koa2，使用 Typescript 开发的轻量级 web 框架。Daruk 的初衷是让人们可以更方便的开发 Nodejs Web 应用并能够体会到 Typescript 编程的乐趣。Daruk 本身基于 100%基于 Typescript 开发，使用 inversifyjs 的 IoC 容器管理依赖，让开发者享受最佳的 OOP 和 IoC 的编程体验。")]),r._v(" "),t("p",[r._v("框架内部集成了许多方便灵活的装饰器函数，让开发者可以写更少的代码来完成更多的事情，Daruk2.0 更改了之前严格要求目录约定的范式，提供给开发者更灵活的操作空间来进行项目约束和编写，但是内置的功能并没有缺失，整个框架的开发能力和 Daruk1.0 能力持平。")]),r._v(" "),t("p",[r._v("比如在 Daruk2.0 中，我们可以使用装饰器来快速定义 service，controller，timer，middleware 等能力来编写 web 应用，且提供了一些基本的内置中间件和路由服务等，更灵活的定义，让 Daruk2.0 可以更灵活的定制你的 web 项目和编写测试脚本。")]),r._v(" "),t("p",[r._v("Daruk 来源自塞尔达传说旷野之息里的四英杰之一，拥有在周围张开结界保护自己的力量，框架的目的也是为了给 nodejs server 提供健壮的基础管理能力。")]),r._v(" "),t("p",[r._v("Daruk2.0 同样基于 koa2，目前包含以下核心功能：")]),r._v(" "),t("ul",[t("li",[r._v("开启装饰器配置，ts 环境下引入即用，无需脚手架等工具。")]),r._v(" "),t("li",[r._v("提供给开发者编写影响框架内部能力的插件机制")]),r._v(" "),t("li",[r._v("可以自定义目录结构，在启动时使用 API 加载你自己定义的源文件")]),r._v(" "),t("li",[r._v("完整的 typescript 开发体验")]),r._v(" "),t("li",[r._v("服务启动完整生命周期 hook")]),r._v(" "),t("li",[r._v("自定义(性能日志 & 业务日志) 染色功能")]),r._v(" "),t("li",[r._v("支持线上实时性能分析")]),r._v(" "),t("li",[r._v("轻量级的链路追踪")]),r._v(" "),t("li",[r._v("面向对象的 mvc 开发体验")]),r._v(" "),t("li",[r._v("配套的一些周边模块")])]),r._v(" "),t("comment")],1)}),[],!1,null,null,null);e.default=_.exports}}]);